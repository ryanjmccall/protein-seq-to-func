# docker-compose.yml

version: '3.8'

services:
  # The PostgreSQL Database Service
  db:
    image: postgres:15-alpine  # Use a lightweight postgres image
    container_name: local-postgres-db
    environment:
      POSTGRES_DB: knowledge_base
      POSTGRES_USER: api_user
      POSTGRES_PASSWORD: your_local_dev_password # This is for local dev only!
    ports:
      - "5432:5432"  # Map local port 5432 to the container's port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U api_user -d knowledge_base"]
      interval: 10s
      timeout: 5s
      retries: 5

  # The FastAPI Backend Service
  backend:
    build:
      context: ./backend  # Tells Docker to look for the Dockerfile in the ./backend directory
    container_name: backend-api-service
    ports:
      - "8000:8080"  # Map local port 8000 to the container's port 8080
    volumes:
      - ./backend:/app  # Mounts your local code into the container for hot-reloading
    environment:
      - DB_HOST=db  # The hostname 'db' resolves to the postgres container
      - DB_NAME=knowledge_base
      - DB_USER=api_user
      - DB_PASS=your_local_dev_password
    depends_on:
      db:
        condition: service_healthy # Ensures the backend only starts after the DB is ready

# Defines a named volume to persist database data across container restarts
volumes:
  postgres_data:
